{"version":3,"file":"search-page.component.js","sourceRoot":"","sources":["../../Users/simonattfield/Projects/benny-hill-player/tmp/broccoli_type_script_compiler-input_base_path-IebOte84.tmp/0/src/app/search-page/search-page.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,gCAA+B,oBAAoB,CAAC,CAAA;AACpD,uBAAqC,WAAW,CAAC,CAAA;AAWjD;IAKE,6BACU,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QALzB,WAAM,GAAG,EAAE,CAAC;QACZ,cAAS,GAAG,IAAI,CAAC;IAIW,CAAC;IAEpC,sCAAQ,GAAR;IAEA,CAAC;IAED,wCAAU,GAAV,UAAW,UAAU;QAArB,iBAOC;QANA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;aAC7B,IAAI,CAAC,UAAA,MAAM;YACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACpC,CAAC;IAED,uCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,yCAAW,GAAX,UAAY,CAAU;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IArCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;YACxC,SAAS,EAAE,CAAC,gCAAc,CAAC;YAC3B,UAAU,EAAE,CAAC,6BAAoB,CAAC;SACnC,CAAC;;2BAAA;IA+BF,0BAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,2BAAmB,sBA8B/B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { YoutubeService } from '../youtube.service';\nimport { VideoPlayerComponent } from '../shared';\nimport { Observable } from 'rxjs'\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-search-page',\n  templateUrl: 'search-page.component.html',\n  styleUrls: ['search-page.component.css'],\n  providers: [YoutubeService],\n  directives: [VideoPlayerComponent]\n})\nexport class SearchPageComponent implements OnInit {\n  public videos = [];\n  public youtubeId = null;\n  public showVideo: boolean;\n\n  constructor(\n    private YTcall: YoutubeService) {}\n\n  ngOnInit() {\n\n  }\n\n  getResults(searchTerm) {\n\t  this.YTcall.getVideos(searchTerm)\n      .then(result => {\n        console.log(result);\n        this.videos = result;\n      })\n      .catch(err => console.log(err));\n  }\n\n  playVideo(videoId) {\n    this.youtubeId = videoId;\n    this.showVideo = true;\n  }\n\n  closedVideo(x: boolean) {\n    this.showVideo = false;\n    this.youtubeId = null;\n  }\n}\n"]}